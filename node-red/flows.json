[
    {
        "id": "a649c60c0e2d4891",
        "type": "tab",
        "label": "Main",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cef8bdbe94630884",
        "type": "comment",
        "z": "a649c60c0e2d4891",
        "name": "LOGIN",
        "info": "",
        "x": 230,
        "y": 140,
        "wires": []
    },
    {
        "id": "da6558599323df18",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Trigger login form at start",
        "func": "msg.payload = {\n    \"tab\": \"Login\",\n    \"tabs\": {\n        \"hide\": [\"Home\"]\n    }\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 200,
        "wires": [
            [
                "b382e19faf94bf64"
            ]
        ]
    },
    {
        "id": "b382e19faf94bf64",
        "type": "ui_ui_control",
        "z": "a649c60c0e2d4891",
        "name": "",
        "events": "all",
        "x": 740,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "9c9a54f6fa46d17c",
        "type": "ui_form",
        "z": "a649c60c0e2d4891",
        "name": "",
        "label": "",
        "group": "781ac152bb694f16",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "Login",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 290,
        "y": 280,
        "wires": [
            [
                "0e365a688812ccb2"
            ]
        ]
    },
    {
        "id": "0e365a688812ccb2",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Authenticate",
        "func": "if (msg.payload.username == flow.get(\"username\") && msg.payload.password == flow.get(\"password\"))\n    msg.payload.isValid = 1;\nelse msg.payload.isValid = 0;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 280,
        "wires": [
            [
                "7455474263e8e271"
            ]
        ]
    },
    {
        "id": "8b95865d8ae01504",
        "type": "inject",
        "z": "a649c60c0e2d4891",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 200,
        "wires": [
            [
                "da6558599323df18",
                "2d4acb7f4c7e1fbc"
            ]
        ]
    },
    {
        "id": "7455474263e8e271",
        "type": "switch",
        "z": "a649c60c0e2d4891",
        "name": "",
        "property": "payload.isValid",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 280,
        "wires": [
            [
                "6ba48bd69c0cbd7f",
                "a7739b1a0fe17c66"
            ],
            [
                "cbe539d0e5508420"
            ]
        ]
    },
    {
        "id": "6ba48bd69c0cbd7f",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Show tabs and disable Login",
        "func": "msg.payload = {\n    \"tab\": \"Home\",\n    \"tabs\": {\n        \"hide\": [\"Login\"],\n        \"show\": [\"Home\"],\n    }\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 280,
        "wires": [
            [
                "bd99f03d44471415"
            ]
        ]
    },
    {
        "id": "104303f6d1fc3519",
        "type": "ui_toast",
        "z": "a649c60c0e2d4891",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Authentication failed",
        "name": "",
        "x": 1030,
        "y": 360,
        "wires": []
    },
    {
        "id": "bd99f03d44471415",
        "type": "ui_ui_control",
        "z": "a649c60c0e2d4891",
        "name": "",
        "events": "all",
        "x": 1080,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "360f0bdc20bc0917",
        "type": "ui_toast",
        "z": "a649c60c0e2d4891",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "Login successfully",
        "name": "",
        "x": 1010,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "a7739b1a0fe17c66",
        "type": "change",
        "z": "a649c60c0e2d4891",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Welcome back!!!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 320,
        "wires": [
            [
                "360f0bdc20bc0917"
            ]
        ]
    },
    {
        "id": "cbe539d0e5508420",
        "type": "change",
        "z": "a649c60c0e2d4891",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Invalid username or password!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 360,
        "wires": [
            [
                "104303f6d1fc3519"
            ]
        ]
    },
    {
        "id": "352d1fc4f07c76f7",
        "type": "comment",
        "z": "a649c60c0e2d4891",
        "name": "HOME",
        "info": "",
        "x": 130,
        "y": 560,
        "wires": []
    },
    {
        "id": "4023bc8169371209",
        "type": "ui_gauge",
        "z": "a649c60c0e2d4891",
        "name": "",
        "group": "59ed651b2ccf91aa",
        "order": 1,
        "width": 9,
        "height": 6,
        "gtype": "wave",
        "title": "Food Remaining",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 660,
        "y": 620,
        "wires": []
    },
    {
        "id": "35a2f4187ea6969a",
        "type": "change",
        "z": "a649c60c0e2d4891",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "80",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 640,
        "wires": [
            [
                "4023bc8169371209"
            ]
        ]
    },
    {
        "id": "7f9f9b2f55eb9886",
        "type": "inject",
        "z": "a649c60c0e2d4891",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 660,
        "wires": [
            [
                "35a2f4187ea6969a",
                "b01e89c224787448",
                "3f4c8d596e1531be"
            ]
        ]
    },
    {
        "id": "9658ab01715f3ea0",
        "type": "ui_gauge",
        "z": "a649c60c0e2d4891",
        "name": "",
        "group": "457669cf121f2326",
        "order": 2,
        "width": 5,
        "height": 6,
        "gtype": "donut",
        "title": "Humidity",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 680,
        "y": 700,
        "wires": []
    },
    {
        "id": "ed89e140b8e093a2",
        "type": "ui_gauge",
        "z": "a649c60c0e2d4891",
        "name": "",
        "group": "457669cf121f2326",
        "order": 1,
        "width": 5,
        "height": 6,
        "gtype": "gage",
        "title": "Temperature",
        "label": "℃",
        "format": "{{value}}",
        "min": "-40",
        "max": "80",
        "colors": [
            "#d53434",
            "#13d83a",
            "#ca3838"
        ],
        "seg1": "15",
        "seg2": "35",
        "diff": false,
        "className": "",
        "x": 670,
        "y": 760,
        "wires": []
    },
    {
        "id": "b01e89c224787448",
        "type": "change",
        "z": "a649c60c0e2d4891",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "70",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 720,
        "wires": [
            [
                "9658ab01715f3ea0"
            ]
        ]
    },
    {
        "id": "3f4c8d596e1531be",
        "type": "change",
        "z": "a649c60c0e2d4891",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "10",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 760,
        "wires": [
            [
                "ed89e140b8e093a2"
            ]
        ]
    },
    {
        "id": "ca118c5d939724ba",
        "type": "comment",
        "z": "a649c60c0e2d4891",
        "name": "FOOD SCHEDULE",
        "info": "",
        "x": 130,
        "y": 1100,
        "wires": []
    },
    {
        "id": "a8b854ddc4196dc7",
        "type": "comment",
        "z": "a649c60c0e2d4891",
        "name": "PET PROFILE",
        "info": "",
        "x": 180,
        "y": 3880,
        "wires": []
    },
    {
        "id": "8e4f3017c6cb130d",
        "type": "ui_text",
        "z": "a649c60c0e2d4891",
        "group": "c67eb2ed437d0cbf",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Name:",
        "format": "{{msg.payload.name}}",
        "layout": "row-center",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#ffffff",
        "x": 770,
        "y": 3880,
        "wires": []
    },
    {
        "id": "cdba6d16fc91ea97",
        "type": "ui_text",
        "z": "a649c60c0e2d4891",
        "group": "c67eb2ed437d0cbf",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Date of birth:",
        "format": "{{msg.payload.dob}}",
        "layout": "row-center",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#ffffff",
        "x": 790,
        "y": 3940,
        "wires": []
    },
    {
        "id": "60d054e5da9090fa",
        "type": "inject",
        "z": "a649c60c0e2d4891",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 110,
        "y": 3960,
        "wires": [
            [
                "473e98d32b284f39",
                "c62cee08efbbcaf6"
            ]
        ]
    },
    {
        "id": "e78018ee9e5b1696",
        "type": "ui_text",
        "z": "a649c60c0e2d4891",
        "group": "c67eb2ed437d0cbf",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Weight:",
        "format": "{{msg.payload.weight}}",
        "layout": "row-center",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#ffffff",
        "x": 780,
        "y": 3980,
        "wires": []
    },
    {
        "id": "adabdc0474a11b92",
        "type": "ui_text",
        "z": "a649c60c0e2d4891",
        "group": "c67eb2ed437d0cbf",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Breed:",
        "format": "{{msg.payload.breed}}",
        "layout": "row-center",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#ffffff",
        "x": 770,
        "y": 4020,
        "wires": []
    },
    {
        "id": "55b97fbacc25b2ba",
        "type": "ui_text",
        "z": "a649c60c0e2d4891",
        "group": "c67eb2ed437d0cbf",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Color: ",
        "format": "{{msg.payload.color}}",
        "layout": "row-center",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#ffffff",
        "x": 770,
        "y": 4060,
        "wires": []
    },
    {
        "id": "19321103aed038c9",
        "type": "ui_button",
        "z": "a649c60c0e2d4891",
        "name": "",
        "group": "c67eb2ed437d0cbf",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Update information",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 210,
        "y": 4340,
        "wires": [
            [
                "07770811f76ef803"
            ]
        ]
    },
    {
        "id": "cf26f672b8cb187d",
        "type": "ui_form",
        "z": "a649c60c0e2d4891",
        "name": "",
        "label": "Enter new information",
        "group": "a4f453e6cef8b789",
        "order": 7,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "name",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Date of birth",
                "value": "dob",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Weight",
                "value": "weight",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Breed",
                "value": "breed",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Color",
                "value": "color",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "name": "",
            "dob": "",
            "weight": "",
            "breed": "",
            "color": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "x": 220,
        "y": 4240,
        "wires": [
            [
                "2709d4d189e2d293",
                "99bc844ffe50097c"
            ]
        ]
    },
    {
        "id": "07770811f76ef803",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Switch to update screen",
        "func": "msg.payload = {\n    \"group\": {\n        \"show\": [\"Profile_Update\"]\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 4340,
        "wires": [
            [
                "74d3ebed04492df4"
            ]
        ]
    },
    {
        "id": "74d3ebed04492df4",
        "type": "ui_ui_control",
        "z": "a649c60c0e2d4891",
        "name": "",
        "events": "all",
        "x": 740,
        "y": 4340,
        "wires": [
            []
        ]
    },
    {
        "id": "473e98d32b284f39",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Set update form invisible",
        "func": "msg.payload = {\n    \"group\": {\n        \"hide\": [\"Profile_Update\"]\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 4060,
        "wires": [
            [
                "b1564f3384d2d255"
            ]
        ]
    },
    {
        "id": "b1564f3384d2d255",
        "type": "ui_ui_control",
        "z": "a649c60c0e2d4891",
        "name": "",
        "events": "all",
        "x": 520,
        "y": 4060,
        "wires": [
            []
        ]
    },
    {
        "id": "2709d4d189e2d293",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Set update form invisible",
        "func": "msg.payload = {\n    \"group\": {\n        \"hide\": [\"Profile_Update\"]\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 4240,
        "wires": [
            [
                "38c74bf5f052fa91"
            ]
        ]
    },
    {
        "id": "38c74bf5f052fa91",
        "type": "ui_ui_control",
        "z": "a649c60c0e2d4891",
        "name": "",
        "events": "all",
        "x": 700,
        "y": 4240,
        "wires": [
            []
        ]
    },
    {
        "id": "b16bb50424830317",
        "type": "comment",
        "z": "a649c60c0e2d4891",
        "name": "DEVICE MANAGER",
        "info": "",
        "x": 130,
        "y": 1720,
        "wires": []
    },
    {
        "id": "3ba8c29432ec6d7d",
        "type": "comment",
        "z": "a649c60c0e2d4891",
        "name": "SETTINGS",
        "info": "",
        "x": 120,
        "y": 2720,
        "wires": []
    },
    {
        "id": "8a011251271891b0",
        "type": "inject",
        "z": "a649c60c0e2d4891",
        "name": "",
        "props": [
            {
                "p": "payload.email",
                "v": "choGthinh@dbrr.com",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "x": 70,
        "y": 2820,
        "wires": [
            [
                "1232b4f1a7efbb8a",
                "44897228d3a41508"
            ]
        ]
    },
    {
        "id": "d29539817a0e8d67",
        "type": "ui_text",
        "z": "a649c60c0e2d4891",
        "group": "ca32dfb2ec8ab7f1",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Email: ",
        "format": "{{msg.payload.email}}",
        "layout": "row-left",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#ffffff",
        "x": 690,
        "y": 2820,
        "wires": []
    },
    {
        "id": "102de8caeeda6dbe",
        "type": "ui_button",
        "z": "a649c60c0e2d4891",
        "name": "",
        "group": "ca32dfb2ec8ab7f1",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Change email",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 3140,
        "wires": [
            [
                "21ea07cc508ba6d3"
            ]
        ]
    },
    {
        "id": "7787f269d7dbd5ec",
        "type": "ui_text",
        "z": "a649c60c0e2d4891",
        "group": "ca32dfb2ec8ab7f1",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Notification",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": "20",
        "color": "#ffffff",
        "x": 850,
        "y": 2840,
        "wires": []
    },
    {
        "id": "f2e2cab74e6ae8f1",
        "type": "ui_switch",
        "z": "a649c60c0e2d4891",
        "name": "",
        "label": "On / Off",
        "tooltip": "",
        "group": "ca32dfb2ec8ab7f1",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 880,
        "y": 2880,
        "wires": [
            [
                "2984b1517fe4331e"
            ]
        ]
    },
    {
        "id": "2bb6d3935c0d9850",
        "type": "mqtt out",
        "z": "a649c60c0e2d4891",
        "name": "",
        "topic": "buzzer/trigger",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "765ac9edbab7f418",
        "x": 1300,
        "y": 1800,
        "wires": []
    },
    {
        "id": "2325384568dc3da0",
        "type": "ui_button",
        "z": "a649c60c0e2d4891",
        "name": "",
        "group": "bc6151c1fb37c908",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Trigger the buzzer",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "trigger buzzer",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 830,
        "y": 1640,
        "wires": [
            [
                "78f97c4054d1a164"
            ]
        ]
    },
    {
        "id": "ca1acc15f3c1c515",
        "type": "ui_switch",
        "z": "a649c60c0e2d4891",
        "name": "",
        "label": "Mute sound",
        "tooltip": "",
        "group": "bc6151c1fb37c908",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 930,
        "y": 1780,
        "wires": [
            [
                "e6e36cd71152a34d"
            ]
        ]
    },
    {
        "id": "f9aec137d6deefee",
        "type": "ui_slider",
        "z": "a649c60c0e2d4891",
        "name": "",
        "label": "Light slider",
        "tooltip": "",
        "group": "b7dc2792b95da7d1",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": "0",
        "max": 10,
        "step": 1,
        "className": "",
        "x": 750,
        "y": 1880,
        "wires": [
            [
                "1228fa51611de35a",
                "f36444da3d8ca8ab",
                "7d3fb774727c6299"
            ]
        ]
    },
    {
        "id": "1228fa51611de35a",
        "type": "ui_gauge",
        "z": "a649c60c0e2d4891",
        "name": "",
        "group": "b7dc2792b95da7d1",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "compass",
        "title": "Light",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 930,
        "y": 1840,
        "wires": []
    },
    {
        "id": "2fa1cf25ac0c4fe4",
        "type": "mqtt out",
        "z": "a649c60c0e2d4891",
        "name": "",
        "topic": "home/data",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "765ac9edbab7f418",
        "x": 490,
        "y": 520,
        "wires": []
    },
    {
        "id": "42f8e7583506ec97",
        "type": "inject",
        "z": "a649c60c0e2d4891",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 500,
        "wires": [
            [
                "2fa1cf25ac0c4fe4"
            ]
        ]
    },
    {
        "id": "f36444da3d8ca8ab",
        "type": "mqtt out",
        "z": "a649c60c0e2d4891",
        "name": "",
        "topic": "light/set",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "765ac9edbab7f418",
        "x": 940,
        "y": 1900,
        "wires": []
    },
    {
        "id": "bf27f3c544090593",
        "type": "ui_toast",
        "z": "a649c60c0e2d4891",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "Enter the PIN code",
        "name": "Ask for PIN",
        "x": 1050,
        "y": 2060,
        "wires": [
            [
                "614e7fffa5c92881"
            ]
        ]
    },
    {
        "id": "6e3e97b5b798d872",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Open message",
        "func": "msg.payload = \"You are about to open the lid\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 2060,
        "wires": [
            [
                "bf27f3c544090593"
            ]
        ]
    },
    {
        "id": "614e7fffa5c92881",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Check PIN code",
        "func": "// if (msg.payload == flow.get('pin')) {\nif (msg.payload == \"123\") {\n    msg.payload = true;\n}\nelse msg.payload = false;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 2060,
        "wires": [
            [
                "75a04ed09b56db73"
            ]
        ]
    },
    {
        "id": "ef65b0a0c3ca8f8a",
        "type": "ui_button",
        "z": "a649c60c0e2d4891",
        "name": "",
        "group": "bf126c3444189feb",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Open / Close the lid",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "lid",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 210,
        "y": 2040,
        "wires": [
            [
                "b2161d1dd9b5752d"
            ]
        ]
    },
    {
        "id": "75a04ed09b56db73",
        "type": "switch",
        "z": "a649c60c0e2d4891",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1450,
        "y": 2060,
        "wires": [
            [
                "a3009467597dd8e0",
                "0eaab9cf7bf95bb9",
                "92f2e1696acf87b2"
            ],
            [
                "cf9cdb5490c4c7cc"
            ]
        ]
    },
    {
        "id": "a3009467597dd8e0",
        "type": "ui_toast",
        "z": "a649c60c0e2d4891",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Operation successfully completed",
        "name": "",
        "x": 1630,
        "y": 2000,
        "wires": []
    },
    {
        "id": "cf9cdb5490c4c7cc",
        "type": "ui_toast",
        "z": "a649c60c0e2d4891",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Invalid PIN code",
        "name": "",
        "x": 1630,
        "y": 2080,
        "wires": []
    },
    {
        "id": "a2f409f9b1f6d812",
        "type": "ui_button",
        "z": "a649c60c0e2d4891",
        "name": "",
        "group": "aa2c7da12e1086a2",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Feed your pet",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 240,
        "y": 2240,
        "wires": [
            [
                "0679f51a72cd521b"
            ]
        ]
    },
    {
        "id": "0eaab9cf7bf95bb9",
        "type": "mqtt out",
        "z": "a649c60c0e2d4891",
        "name": "",
        "topic": "lid/open",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "765ac9edbab7f418",
        "x": 1600,
        "y": 2040,
        "wires": []
    },
    {
        "id": "0679f51a72cd521b",
        "type": "mqtt out",
        "z": "a649c60c0e2d4891",
        "name": "",
        "topic": "feed",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "765ac9edbab7f418",
        "x": 430,
        "y": 2240,
        "wires": []
    },
    {
        "id": "35c39b88a4c1c098",
        "type": "inject",
        "z": "a649c60c0e2d4891",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1160,
        "wires": [
            [
                "5158e3b54e2c43b3",
                "5a23e70c41a33a63"
            ]
        ]
    },
    {
        "id": "ee827662f46c4213",
        "type": "ui_text",
        "z": "a649c60c0e2d4891",
        "group": "0d1a2c0b7eda5eb1",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "12:00 - 14:00",
        "format": "{{msg.payload.time1}}g",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 870,
        "y": 1280,
        "wires": []
    },
    {
        "id": "cf45245d55425f66",
        "type": "ui_text",
        "z": "a649c60c0e2d4891",
        "group": "0d1a2c0b7eda5eb1",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "8:00 - 10:00",
        "format": "{{msg.payload.time0}}g",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 870,
        "y": 1240,
        "wires": []
    },
    {
        "id": "4ba1363f4b13bf86",
        "type": "ui_text",
        "z": "a649c60c0e2d4891",
        "group": "0d1a2c0b7eda5eb1",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "20:00 - 22:00",
        "format": "{{msg.payload.time3}}g",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 870,
        "y": 1360,
        "wires": []
    },
    {
        "id": "f07794f80d301b04",
        "type": "ui_text",
        "z": "a649c60c0e2d4891",
        "group": "0d1a2c0b7eda5eb1",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "16:00 - 18:00",
        "format": "{{msg.payload.time2}}g",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 870,
        "y": 1320,
        "wires": []
    },
    {
        "id": "0f22da0ce48ee1a4",
        "type": "ui_button",
        "z": "a649c60c0e2d4891",
        "name": "",
        "group": "0d1a2c0b7eda5eb1",
        "order": 5,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Update Schedule",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 1540,
        "wires": [
            [
                "a61cb9329cfbab66"
            ]
        ]
    },
    {
        "id": "5158e3b54e2c43b3",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Set update form invisible",
        "func": "msg.payload = {\n    \"group\": {\n        \"hide\": [\"FoodSchedule_Update\"]\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1120,
        "wires": [
            [
                "faf3b18e01df09fe"
            ]
        ]
    },
    {
        "id": "faf3b18e01df09fe",
        "type": "ui_ui_control",
        "z": "a649c60c0e2d4891",
        "name": "",
        "events": "all",
        "x": 600,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "a61cb9329cfbab66",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Set update form visible",
        "func": "msg.payload = {\n    \"group\": {\n        \"show\": [\"FoodSchedule_Update\"]\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1540,
        "wires": [
            [
                "73f2dd0e88c856cc"
            ]
        ]
    },
    {
        "id": "73f2dd0e88c856cc",
        "type": "ui_ui_control",
        "z": "a649c60c0e2d4891",
        "name": "",
        "events": "all",
        "x": 680,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "507e229301cb4990",
        "type": "ui_form",
        "z": "a649c60c0e2d4891",
        "name": "",
        "label": "Update Food Schedule",
        "group": "07c0afe64b480570",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "8:00 - 10:00",
                "value": "time0",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "12:00 - 14:00",
                "value": "time1",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "16:00 - 18:00",
                "value": "time2",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "20:00 - 22:00",
                "value": "time3",
                "type": "number",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "time0": "",
            "time1": "",
            "time2": "",
            "time3": ""
        },
        "payload": "",
        "submit": "update",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "47b36ae923f93e0b",
                "cf45245d55425f66",
                "ee827662f46c4213",
                "f07794f80d301b04",
                "4ba1363f4b13bf86",
                "f074449a79a9c8ba"
            ]
        ]
    },
    {
        "id": "47b36ae923f93e0b",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Set update form invisible",
        "func": "msg.payload = {\n    \"group\": {\n        \"hide\": [\"FoodSchedule_Update\"]\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1420,
        "wires": [
            [
                "fa6318674142d364"
            ]
        ]
    },
    {
        "id": "fa6318674142d364",
        "type": "ui_ui_control",
        "z": "a649c60c0e2d4891",
        "name": "",
        "events": "all",
        "x": 740,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "c8c0b3c54895fd4d",
        "type": "mqtt out",
        "z": "a649c60c0e2d4891",
        "name": "",
        "topic": "schedule/set",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e9376441b65f8fa6",
        "x": 950,
        "y": 1180,
        "wires": []
    },
    {
        "id": "8ddf57c90368304f",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Split data",
        "func": "var msgList = [];\nmsgList.push({payload: msg.payload.time0});\nmsgList.push({payload: msg.payload.time1});\nmsgList.push({payload: msg.payload.time2});\nmsgList.push({payload: msg.payload.time3});\nreturn [msgList];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1180,
        "wires": [
            [
                "c8c0b3c54895fd4d"
            ]
        ]
    },
    {
        "id": "d30dedb33060603b",
        "type": "debug",
        "z": "a649c60c0e2d4891",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 1120,
        "wires": []
    },
    {
        "id": "ee3f749422043f64",
        "type": "mqtt in",
        "z": "a649c60c0e2d4891",
        "name": "",
        "topic": "home/foodConsumed",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e9376441b65f8fa6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 1000,
        "wires": [
            [
                "5bd13c3ba6f7d7da"
            ]
        ]
    },
    {
        "id": "b4b99ba3dac53903",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Set notification",
        "func": "if (msg.payload.noti == 1) msg.payload = true;\nelse msg.payload = false;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 2900,
        "wires": [
            [
                "f2e2cab74e6ae8f1"
            ]
        ]
    },
    {
        "id": "0b33b1c83873ee81",
        "type": "ui_text",
        "z": "a649c60c0e2d4891",
        "group": "ca32dfb2ec8ab7f1",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Username: ",
        "format": "{{msg.payload.username}}",
        "layout": "row-left",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#ffffff",
        "x": 710,
        "y": 2960,
        "wires": []
    },
    {
        "id": "c7bcd58105e92a77",
        "type": "ui_text",
        "z": "a649c60c0e2d4891",
        "group": "ca32dfb2ec8ab7f1",
        "order": 7,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Password: ",
        "format": "{{msg.payload.password}}",
        "layout": "row-left",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#ffffff",
        "x": 690,
        "y": 3020,
        "wires": []
    },
    {
        "id": "30d799f8ad61b5d9",
        "type": "ui_text",
        "z": "a649c60c0e2d4891",
        "group": "ca32dfb2ec8ab7f1",
        "order": 9,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "PIN code: ",
        "format": "{{msg.payload.pin}}",
        "layout": "row-left",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#ffffff",
        "x": 660,
        "y": 3080,
        "wires": []
    },
    {
        "id": "1ecf5e5da9981f5a",
        "type": "ui_button",
        "z": "a649c60c0e2d4891",
        "name": "",
        "group": "ca32dfb2ec8ab7f1",
        "order": 8,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Change password",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 3220,
        "wires": [
            [
                "1cb97ac7d96c469c"
            ]
        ]
    },
    {
        "id": "b52dd36f997f4c40",
        "type": "ui_button",
        "z": "a649c60c0e2d4891",
        "name": "",
        "group": "ca32dfb2ec8ab7f1",
        "order": 10,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Change PIN",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 3300,
        "wires": [
            [
                "90c71a80f9600d95"
            ]
        ]
    },
    {
        "id": "4f15ddb68075a57d",
        "type": "ui_form",
        "z": "a649c60c0e2d4891",
        "name": "",
        "label": "Change email",
        "group": "1201def5af3744ec",
        "order": 11,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Email",
                "value": "email",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "email": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 420,
        "y": 3380,
        "wires": [
            [
                "a9bcbe8980a8b673"
            ]
        ]
    },
    {
        "id": "3d1c6df19a9d16e9",
        "type": "ui_form",
        "z": "a649c60c0e2d4891",
        "name": "",
        "label": "Change password",
        "group": "74b507372793b1f3",
        "order": 12,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "New password",
                "value": "password",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 390,
        "y": 3500,
        "wires": [
            [
                "ad3b02ef1fd01e8d"
            ]
        ]
    },
    {
        "id": "a6c73e387735883b",
        "type": "ui_form",
        "z": "a649c60c0e2d4891",
        "name": "",
        "label": "Change PIN code",
        "group": "cfdded2a777fe28a",
        "order": 13,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "New PIN code",
                "value": "pin",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "pin": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 390,
        "y": 3620,
        "wires": [
            [
                "cffbf9740ed5d9a7"
            ]
        ]
    },
    {
        "id": "1232b4f1a7efbb8a",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Hide update forms ",
        "func": "msg.payload = {\n    \"group\": {\n        \"hide\": [\"Settings_EmailUpdate\", \"Settings_PasswordUpdate\", \"Settings_PinUpdate\"]\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 2980,
        "wires": [
            [
                "5616789e67f37842"
            ]
        ]
    },
    {
        "id": "5616789e67f37842",
        "type": "ui_ui_control",
        "z": "a649c60c0e2d4891",
        "name": "",
        "events": "all",
        "x": 400,
        "y": 3020,
        "wires": [
            []
        ]
    },
    {
        "id": "21ea07cc508ba6d3",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Unhide email form",
        "func": "msg.payload = {\n    \"group\": {\n        \"show\": [\"Settings_EmailUpdate\"]\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 3140,
        "wires": [
            [
                "196643e37866c923"
            ]
        ]
    },
    {
        "id": "196643e37866c923",
        "type": "ui_ui_control",
        "z": "a649c60c0e2d4891",
        "name": "",
        "events": "all",
        "x": 620,
        "y": 3200,
        "wires": [
            []
        ]
    },
    {
        "id": "1cb97ac7d96c469c",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Unhide password form",
        "func": "msg.payload = {\n    \"group\": {\n        \"show\": [\"Settings_PasswordUpdate\"]\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 3220,
        "wires": [
            [
                "196643e37866c923"
            ]
        ]
    },
    {
        "id": "90c71a80f9600d95",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Unhide PIN form",
        "func": "msg.payload = {\n    \"group\": {\n        \"show\": [\"Settings_PinUpdate\"]\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 3300,
        "wires": [
            [
                "196643e37866c923"
            ]
        ]
    },
    {
        "id": "a9bcbe8980a8b673",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Set new email",
        "func": "msg.payload = [{id: \"1\"}, {$set: {\"email\": msg.payload.email}}];\nmsg.operation = \"updateOne\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 3360,
        "wires": [
            [
                "d29539817a0e8d67",
                "5638657d1c3b4a6e"
            ]
        ]
    },
    {
        "id": "ad3b02ef1fd01e8d",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Set new password",
        "func": "msg.payload = [{id: \"1\"}, {$set: {\"password\": msg.payload.password}}];\nmsg.operation = \"updateOne\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 3500,
        "wires": [
            [
                "c7bcd58105e92a77",
                "b93875faa2ea10c4"
            ]
        ]
    },
    {
        "id": "cffbf9740ed5d9a7",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Set new pin",
        "func": "msg.payload = [{id: \"1\"}, {$set: {\"pin\": msg.payload.pin}}];\nmsg.operation = \"updateOne\";\nreturn msg;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 3620,
        "wires": [
            [
                "30d799f8ad61b5d9",
                "40c80104e443262a"
            ]
        ]
    },
    {
        "id": "1dfc97f2c94314da",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Set Auth Data",
        "func": "flow.set(\"username\", msg.payload.username);\nflow.set(\"password\", msg.payload.password);\nflow.set(\"email\", msg.payload.email);\nflow.set(\"pin\", msg.payload.pin);\nflow.set(\"noti\", msg.payload.noti);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 2740,
        "wires": [
            [
                "fb701e72b83f6306"
            ]
        ]
    },
    {
        "id": "2984b1517fe4331e",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Set new noti",
        "func": "msg.payload = [{id: \"1\"}, {$set: {\"noti\": msg.payload}}];\nmsg.operation = \"updateOne\";\nreturn msg;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 2860,
        "wires": [
            [
                "501383867808c234"
            ]
        ]
    },
    {
        "id": "a5d3133e8443bbde",
        "type": "mqtt in",
        "z": "a649c60c0e2d4891",
        "name": "",
        "topic": "alert/food",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "765ac9edbab7f418",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 4660,
        "wires": [
            [
                "68740cae6933be63"
            ]
        ]
    },
    {
        "id": "160ddb83bd8a1b38",
        "type": "mqtt in",
        "z": "a649c60c0e2d4891",
        "name": "",
        "topic": "alert/env",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "765ac9edbab7f418",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 4780,
        "wires": [
            [
                "68740cae6933be63"
            ]
        ]
    },
    {
        "id": "4f39016b0180a0d0",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Setup email",
        "func": "msg.payload = \"The device is running low on supplies. Can you please restock it at your earliest convenience?\";\nmsg.topic = \"FOOD RUNNING OUT\";\nmsg.to = flow.get(\"email\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 4660,
        "wires": [
            [
                "6a38e3d36213a19c",
                "b8573f9d16105857"
            ]
        ]
    },
    {
        "id": "eef7c898aba8d1c2",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Setup email",
        "func": "msg.payload = \"It seems like the temperature or humidity levels are a bit extreme. You might want to check on things and make adjustments if needed.\";\nmsg.topic = \"TEMPERATURE AND HUMIDITY LEVELS DETECTED OUTSIDE NORMAL RANGE\";\nmsg.to = flow.get(\"email\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 4780,
        "wires": [
            [
                "0fbcd001feeadd19"
            ]
        ]
    },
    {
        "id": "169fe78fa7b2ea22",
        "type": "inject",
        "z": "a649c60c0e2d4891",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 520,
        "y": 4600,
        "wires": [
            [
                "4f39016b0180a0d0"
            ]
        ]
    },
    {
        "id": "b8573f9d16105857",
        "type": "debug",
        "z": "a649c60c0e2d4891",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 4580,
        "wires": []
    },
    {
        "id": "fb701e72b83f6306",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "function 4",
        "func": "msg.payload = flow.get(\"email\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 2680,
        "wires": [
            []
        ]
    },
    {
        "id": "924f9e5b40cad418",
        "type": "switch",
        "z": "a649c60c0e2d4891",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 4700,
        "wires": [
            [
                "4f39016b0180a0d0",
                "eef7c898aba8d1c2"
            ],
            []
        ]
    },
    {
        "id": "68740cae6933be63",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Check notification is turn on or not",
        "func": "if (flow.get(\"noti\") == true) msg.payload = 1;\nelse msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 4700,
        "wires": [
            [
                "924f9e5b40cad418"
            ]
        ]
    },
    {
        "id": "6a38e3d36213a19c",
        "type": "e-mail",
        "z": "a649c60c0e2d4891",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "Send email",
        "x": 1010,
        "y": 4740,
        "wires": []
    },
    {
        "id": "0fbcd001feeadd19",
        "type": "e-mail",
        "z": "a649c60c0e2d4891",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "Send email",
        "x": 990,
        "y": 4840,
        "wires": []
    },
    {
        "id": "5a23e70c41a33a63",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Read Schedule",
        "func": "msg.payload = {}\nmsg.operation = \"find.forEach\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1240,
        "wires": [
            [
                "c0ee0891ab65956c"
            ]
        ]
    },
    {
        "id": "f074449a79a9c8ba",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Update Schedule",
        "func": "var msgdata = {}\n\nvar updateData = {};\n\nif(msg.payload.time0 != null){\n    updateData.time0 = msg.payload.time0;\n}\nif(msg.payload.time1 != null){\n    updateData.time1 = msg.payload.time1;\n}\nif(msg.payload.time2 != null){\n    updateData.time2 = msg.payload.time2;\n}\nif(msg.payload.time3 != null){\n    updateData.time3 = msg.payload.time3;\n}\n\nmsgdata.operation = \"updateOne\";\nmsgdata.payload = [{id: \"1\"}, {$set: updateData}];\nreturn msgdata;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1480,
        "wires": [
            [
                "2e8fd1514b9740b8"
            ]
        ]
    },
    {
        "id": "c62cee08efbbcaf6",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Read Profile",
        "func": "msg.payload = {}\nmsg.operation = \"find.forEach\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 3980,
        "wires": [
            [
                "8b58e26c30ecfdd2"
            ]
        ]
    },
    {
        "id": "99bc844ffe50097c",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Update Profile",
        "func": "var msgdata = {}\n\nvar updateData = {};\n\nif(msg.payload.name != \"\"){\n    updateData.name = msg.payload.name;\n}\nif(msg.payload.dob != \"\"){\n    updateData.dob = msg.payload.dob;\n}\nif(msg.payload.weight != \"\"){\n    updateData.weight = msg.payload.weight;\n}\nif(msg.payload.breed != \"\"){\n    updateData.breed = msg.payload.breed;\n}\nif (msg.payload.color != \"\"){\n    updateData.color = msg.payload.color;\n}\n\nmsgdata.operation = \"updateOne\";\nmsgdata.payload = [{id: \"1\"}, {$set: updateData}];\nreturn msgdata;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 4160,
        "wires": [
            [
                "bc90d3a7a38b3354"
            ]
        ]
    },
    {
        "id": "ae078bb7a6fe0964",
        "type": "comment",
        "z": "a649c60c0e2d4891",
        "name": "SEND MAIL",
        "info": "",
        "x": 250,
        "y": 4540,
        "wires": []
    },
    {
        "id": "c0ee0891ab65956c",
        "type": "mongodb3 in",
        "z": "a649c60c0e2d4891",
        "service": "_ext_",
        "configNode": "38b7efb1e8b17c40",
        "name": "schedule",
        "collection": "schedule",
        "operation": "",
        "x": 580,
        "y": 1240,
        "wires": [
            [
                "cf45245d55425f66",
                "ee827662f46c4213",
                "f07794f80d301b04",
                "4ba1363f4b13bf86",
                "8ddf57c90368304f"
            ]
        ]
    },
    {
        "id": "2e8fd1514b9740b8",
        "type": "mongodb3 in",
        "z": "a649c60c0e2d4891",
        "service": "_ext_",
        "configNode": "38b7efb1e8b17c40",
        "name": "schedule",
        "collection": "schedule",
        "operation": "",
        "x": 700,
        "y": 1480,
        "wires": [
            [
                "8ffe23210f32f7a6"
            ]
        ]
    },
    {
        "id": "8b58e26c30ecfdd2",
        "type": "mongodb3 in",
        "z": "a649c60c0e2d4891",
        "service": "_ext_",
        "configNode": "38b7efb1e8b17c40",
        "name": "profile",
        "collection": "profile",
        "operation": "",
        "x": 470,
        "y": 3980,
        "wires": [
            [
                "8e4f3017c6cb130d",
                "cdba6d16fc91ea97",
                "e78018ee9e5b1696",
                "adabdc0474a11b92",
                "55b97fbacc25b2ba"
            ]
        ]
    },
    {
        "id": "bc90d3a7a38b3354",
        "type": "mongodb3 in",
        "z": "a649c60c0e2d4891",
        "service": "_ext_",
        "configNode": "38b7efb1e8b17c40",
        "name": "profile",
        "collection": "profile",
        "operation": "",
        "x": 630,
        "y": 4160,
        "wires": [
            [
                "c62cee08efbbcaf6"
            ]
        ]
    },
    {
        "id": "bc6bd67828f1e817",
        "type": "mongodb3 in",
        "z": "a649c60c0e2d4891",
        "service": "_ext_",
        "configNode": "38b7efb1e8b17c40",
        "name": "auth",
        "collection": "auth",
        "operation": "",
        "x": 430,
        "y": 2860,
        "wires": [
            [
                "1dfc97f2c94314da",
                "d29539817a0e8d67",
                "b4b99ba3dac53903",
                "0b33b1c83873ee81",
                "c7bcd58105e92a77",
                "30d799f8ad61b5d9"
            ]
        ]
    },
    {
        "id": "5638657d1c3b4a6e",
        "type": "mongodb3 in",
        "z": "a649c60c0e2d4891",
        "service": "_ext_",
        "configNode": "38b7efb1e8b17c40",
        "name": "write email",
        "collection": "auth",
        "operation": "",
        "x": 950,
        "y": 3300,
        "wires": [
            [
                "23260876d3c33630"
            ]
        ]
    },
    {
        "id": "44897228d3a41508",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Read auth",
        "func": "msg.payload = {}\nmsg.operation = \"find.forEach\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 2840,
        "wires": [
            [
                "bc6bd67828f1e817"
            ]
        ]
    },
    {
        "id": "23260876d3c33630",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "function 5",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 3440,
        "wires": [
            [
                "1232b4f1a7efbb8a"
            ]
        ]
    },
    {
        "id": "b93875faa2ea10c4",
        "type": "mongodb3 in",
        "z": "a649c60c0e2d4891",
        "service": "_ext_",
        "configNode": "38b7efb1e8b17c40",
        "name": "write password",
        "collection": "auth",
        "operation": "",
        "x": 980,
        "y": 3480,
        "wires": [
            [
                "23260876d3c33630"
            ]
        ]
    },
    {
        "id": "40c80104e443262a",
        "type": "mongodb3 in",
        "z": "a649c60c0e2d4891",
        "service": "_ext_",
        "configNode": "38b7efb1e8b17c40",
        "name": "write pin",
        "collection": "auth",
        "operation": "",
        "x": 990,
        "y": 3600,
        "wires": [
            [
                "23260876d3c33630"
            ]
        ]
    },
    {
        "id": "501383867808c234",
        "type": "mongodb3 in",
        "z": "a649c60c0e2d4891",
        "service": "_ext_",
        "configNode": "38b7efb1e8b17c40",
        "name": "write noti",
        "collection": "auth",
        "operation": "",
        "x": 1200,
        "y": 2960,
        "wires": [
            [
                "23260876d3c33630"
            ]
        ]
    },
    {
        "id": "2d4acb7f4c7e1fbc",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Read auth data",
        "func": "msg.payload = {}\nmsg.operation = \"find.forEach\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 120,
        "wires": [
            [
                "556651dbbd85de9f"
            ]
        ]
    },
    {
        "id": "556651dbbd85de9f",
        "type": "mongodb3 in",
        "z": "a649c60c0e2d4891",
        "service": "_ext_",
        "configNode": "38b7efb1e8b17c40",
        "name": "auth",
        "collection": "auth",
        "operation": "",
        "x": 690,
        "y": 100,
        "wires": [
            [
                "1626f522cb5247ef"
            ]
        ]
    },
    {
        "id": "1626f522cb5247ef",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Set Auth Data",
        "func": "flow.set(\"username\", msg.payload.username);\nflow.set(\"password\", msg.payload.password);\nflow.set(\"email\", msg.payload.email);\nflow.set(\"pin\", msg.payload.pin);\nflow.set(\"noti\", msg.payload.noti);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "6fbe20542f357b38",
        "type": "switch",
        "z": "a649c60c0e2d4891",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 2080,
        "wires": [
            [
                "6e3e97b5b798d872"
            ],
            [
                "4bbe050489cbb154"
            ]
        ]
    },
    {
        "id": "4bbe050489cbb154",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Close message",
        "func": "msg.payload = \"You are about to close the lid\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 2160,
        "wires": [
            [
                "a2a18afdec9cc2b6"
            ]
        ]
    },
    {
        "id": "a2a18afdec9cc2b6",
        "type": "ui_toast",
        "z": "a649c60c0e2d4891",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Show notification",
        "x": 1050,
        "y": 2160,
        "wires": [
            [
                "444c148a6541401d",
                "a3009467597dd8e0",
                "1ff7f2317bb26bfe"
            ]
        ]
    },
    {
        "id": "444c148a6541401d",
        "type": "mqtt out",
        "z": "a649c60c0e2d4891",
        "name": "",
        "topic": "lid/close",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "765ac9edbab7f418",
        "x": 1300,
        "y": 2160,
        "wires": []
    },
    {
        "id": "92f2e1696acf87b2",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Update lock (lid) state",
        "func": "msg.payload = [{id: \"1\"}, {$set: {\"isLocked\": false}}];\nmsg.operation = \"updateOne\";\nflow.set(\"isLocked\", false);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 1940,
        "wires": [
            [
                "a053bab5c65de3ba"
            ]
        ]
    },
    {
        "id": "a053bab5c65de3ba",
        "type": "mongodb3 in",
        "z": "a649c60c0e2d4891",
        "service": "_ext_",
        "configNode": "38b7efb1e8b17c40",
        "name": "Write lock state",
        "collection": "state",
        "operation": "",
        "x": 1830,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "1ff7f2317bb26bfe",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Update lock (lid) state",
        "func": "msg.payload = [{id: \"1\"}, {$set: {\"isLocked\": true}}];\nmsg.operation = \"updateOne\";\nflow.set(\"isLocked\", true);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 2240,
        "wires": [
            [
                "6221e4ed064aedd3"
            ]
        ]
    },
    {
        "id": "6221e4ed064aedd3",
        "type": "mongodb3 in",
        "z": "a649c60c0e2d4891",
        "service": "_ext_",
        "configNode": "38b7efb1e8b17c40",
        "name": "Write lock state",
        "collection": "state",
        "operation": "",
        "x": 1520,
        "y": 2240,
        "wires": [
            []
        ]
    },
    {
        "id": "d4c1a7ae2b5c4c7b",
        "type": "inject",
        "z": "a649c60c0e2d4891",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 1820,
        "wires": [
            [
                "b82ee360de07bb8a"
            ]
        ]
    },
    {
        "id": "fae2159469a4bf84",
        "type": "mongodb3 in",
        "z": "a649c60c0e2d4891",
        "service": "_ext_",
        "configNode": "38b7efb1e8b17c40",
        "name": "Read state",
        "collection": "state",
        "operation": "",
        "x": 430,
        "y": 1720,
        "wires": [
            [
                "32115bbb43fe5cf4",
                "bdd381bf12e6aa05"
            ]
        ]
    },
    {
        "id": "b82ee360de07bb8a",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Read state",
        "func": "msg.payload = {}\nmsg.operation = \"find.forEach\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1780,
        "wires": [
            [
                "fae2159469a4bf84"
            ]
        ]
    },
    {
        "id": "32115bbb43fe5cf4",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Store states",
        "func": "flow.set('isLocked', msg.payload.isLocked);\nflow.set('isMuted', msg.payload.isMuted);\nflow.set('curBrightness', msg.payload.curBrightness);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1780,
        "wires": [
            [
                "f311609caffcf9cd",
                "b94ad6c396c84a21"
            ]
        ]
    },
    {
        "id": "f311609caffcf9cd",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Set mute state",
        "func": "msg.payload = flow.get('isMuted');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1720,
        "wires": [
            [
                "ca1acc15f3c1c515"
            ]
        ]
    },
    {
        "id": "b94ad6c396c84a21",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Set brightness",
        "func": "msg.payload = flow.get('curBrightness');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1860,
        "wires": [
            [
                "f9aec137d6deefee"
            ]
        ]
    },
    {
        "id": "7d3fb774727c6299",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Update brightness",
        "func": "flow.set('curBrightness', msg.payload);\nmsg.payload = [{id: \"1\"}, {$set: {\"curBrightness\": flow.get('curBrightness')}}];\nmsg.operation = \"updateOne\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1980,
        "wires": [
            [
                "1669601d0797e2ab"
            ]
        ]
    },
    {
        "id": "1669601d0797e2ab",
        "type": "mongodb3 in",
        "z": "a649c60c0e2d4891",
        "service": "_ext_",
        "configNode": "38b7efb1e8b17c40",
        "name": "Store brightness",
        "collection": "state",
        "operation": "",
        "x": 1180,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "78f97c4054d1a164",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "isMuted?",
        "func": "msg.payload = ''\nmsg.payload = flow.get('isMuted');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1700,
        "wires": [
            [
                "3976921d95e45387",
                "c64fea78213347b4"
            ]
        ]
    },
    {
        "id": "3976921d95e45387",
        "type": "switch",
        "z": "a649c60c0e2d4891",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1190,
        "y": 1700,
        "wires": [
            [
                "2bb6d3935c0d9850"
            ]
        ]
    },
    {
        "id": "49f1545c4050228a",
        "type": "mqtt in",
        "z": "a649c60c0e2d4891",
        "name": "Food proportion",
        "topic": "home/foodProportion",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "765ac9edbab7f418",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 420,
        "y": 600,
        "wires": [
            [
                "4023bc8169371209"
            ]
        ]
    },
    {
        "id": "44e10757d91d5888",
        "type": "mqtt in",
        "z": "a649c60c0e2d4891",
        "name": "Humidity",
        "topic": "home/humidity",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "765ac9edbab7f418",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 430,
        "y": 680,
        "wires": [
            [
                "9658ab01715f3ea0"
            ]
        ]
    },
    {
        "id": "ec3dc80cf7b14022",
        "type": "mqtt in",
        "z": "a649c60c0e2d4891",
        "name": "Temperature",
        "topic": "home/temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "765ac9edbab7f418",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 430,
        "y": 800,
        "wires": [
            [
                "ed89e140b8e093a2"
            ]
        ]
    },
    {
        "id": "bdd381bf12e6aa05",
        "type": "debug",
        "z": "a649c60c0e2d4891",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 1660,
        "wires": []
    },
    {
        "id": "b2161d1dd9b5752d",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Is locked?",
        "func": "msg.payload = flow.get('isLocked');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 2060,
        "wires": [
            [
                "6fbe20542f357b38"
            ]
        ]
    },
    {
        "id": "e6e36cd71152a34d",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Set mute",
        "func": "flow.set('isMuted', msg.payload);\nmsg.payload = [{id: \"1\"}, {$set: {\"isMuted\": msg.payload}}];\nmsg.operation = \"updateOne\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1840,
        "wires": [
            [
                "10bcc86e4b0e6ab8"
            ]
        ]
    },
    {
        "id": "10bcc86e4b0e6ab8",
        "type": "mongodb3 in",
        "z": "a649c60c0e2d4891",
        "service": "_ext_",
        "configNode": "38b7efb1e8b17c40",
        "name": "write isMuted",
        "collection": "state",
        "operation": "",
        "x": 1310,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "c64fea78213347b4",
        "type": "debug",
        "z": "a649c60c0e2d4891",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 1620,
        "wires": []
    },
    {
        "id": "5bd13c3ba6f7d7da",
        "type": "http request",
        "z": "a649c60c0e2d4891",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=DJFUMV6GGHJ1K2NF&field1={{{payload}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 410,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "bb423447f6ac921f",
        "type": "inject",
        "z": "a649c60c0e2d4891",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "30",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 880,
        "wires": [
            [
                "4004301f2757d931"
            ]
        ]
    },
    {
        "id": "4004301f2757d931",
        "type": "http request",
        "z": "a649c60c0e2d4891",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2373081/fields/1.json?api_key=510XCB8IN99M7MCH&results=1",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 880,
        "wires": [
            [
                "1f381e671e79bf06"
            ]
        ]
    },
    {
        "id": "1012d229157f7933",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "function 11",
        "func": "msg.payload = Number(msg.payload.feeds[0].field1);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 880,
        "wires": [
            [
                "faea2a2ead6f2474"
            ]
        ]
    },
    {
        "id": "1f381e671e79bf06",
        "type": "json",
        "z": "a649c60c0e2d4891",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 880,
        "wires": [
            [
                "1012d229157f7933"
            ]
        ]
    },
    {
        "id": "9b76d814c965957d",
        "type": "mqtt in",
        "z": "a649c60c0e2d4891",
        "name": "Request Schedule",
        "topic": "schedule/request",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e9376441b65f8fa6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 1240,
        "wires": [
            [
                "5a23e70c41a33a63"
            ]
        ]
    },
    {
        "id": "faea2a2ead6f2474",
        "type": "ui_chart",
        "z": "a649c60c0e2d4891",
        "name": "",
        "group": "3e75d3f7611fd738",
        "order": 0,
        "width": "15",
        "height": "6",
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "8ffe23210f32f7a6",
        "type": "function",
        "z": "a649c60c0e2d4891",
        "name": "Read Schedule",
        "func": "msg.payload = {}\nmsg.operation = \"find.forEach\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1480,
        "wires": [
            [
                "f97a622ecd8c0ed4"
            ]
        ]
    },
    {
        "id": "f97a622ecd8c0ed4",
        "type": "mongodb3 in",
        "z": "a649c60c0e2d4891",
        "service": "_ext_",
        "configNode": "38b7efb1e8b17c40",
        "name": "schedule",
        "collection": "schedule",
        "operation": "",
        "x": 1020,
        "y": 1480,
        "wires": [
            [
                "cf45245d55425f66",
                "ee827662f46c4213",
                "f07794f80d301b04",
                "4ba1363f4b13bf86"
            ]
        ]
    },
    {
        "id": "c245e692bec0e2ae",
        "type": "ui_spacer",
        "z": "a649c60c0e2d4891",
        "name": "spacer",
        "group": "ca32dfb2ec8ab7f1",
        "order": 4,
        "width": 3,
        "height": 1
    },
    {
        "id": "781ac152bb694f16",
        "type": "ui_group",
        "name": "Login form",
        "tab": "ce5ab49963467673",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "59ed651b2ccf91aa",
        "type": "ui_group",
        "name": "Food capacity",
        "tab": "fa03995da56e803e",
        "order": 1,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "457669cf121f2326",
        "type": "ui_group",
        "name": "Current Environment",
        "tab": "fa03995da56e803e",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c67eb2ed437d0cbf",
        "type": "ui_group",
        "name": "Profile",
        "tab": "e6b7a06246b867a9",
        "order": 1,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a4f453e6cef8b789",
        "type": "ui_group",
        "name": "Update",
        "tab": "e6b7a06246b867a9",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ca32dfb2ec8ab7f1",
        "type": "ui_group",
        "name": "Email",
        "tab": "b04556f58b734d6e",
        "order": 1,
        "disp": false,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "765ac9edbab7f418",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "bc6151c1fb37c908",
        "type": "ui_group",
        "name": "Buzzer",
        "tab": "8acf4cd8dcadb6ca",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b7dc2792b95da7d1",
        "type": "ui_group",
        "name": "Light",
        "tab": "8acf4cd8dcadb6ca",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bf126c3444189feb",
        "type": "ui_group",
        "name": "Lid",
        "tab": "8acf4cd8dcadb6ca",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "aa2c7da12e1086a2",
        "type": "ui_group",
        "name": "Feed",
        "tab": "8acf4cd8dcadb6ca",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0d1a2c0b7eda5eb1",
        "type": "ui_group",
        "name": "Current",
        "tab": "7b0bd463e3250132",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "07c0afe64b480570",
        "type": "ui_group",
        "name": "Update",
        "tab": "7b0bd463e3250132",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e9376441b65f8fa6",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "1201def5af3744ec",
        "type": "ui_group",
        "name": "EmailUpdate",
        "tab": "b04556f58b734d6e",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "74b507372793b1f3",
        "type": "ui_group",
        "name": "PasswordUpdate",
        "tab": "b04556f58b734d6e",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cfdded2a777fe28a",
        "type": "ui_group",
        "name": "PinUpdate",
        "tab": "b04556f58b734d6e",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "38b7efb1e8b17c40",
        "type": "mongodb3",
        "uri": "mongodb+srv://iot:hcmusiot@hcmusiot.gfzjc3f.mongodb.net/?retryWrites=true&w=majority",
        "name": "smart_pet_feeder",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "3e75d3f7611fd738",
        "type": "ui_group",
        "name": "Food consumption",
        "tab": "fa03995da56e803e",
        "order": 4,
        "disp": true,
        "width": "15",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ce5ab49963467673",
        "type": "ui_tab",
        "d": true,
        "name": "Login",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "fa03995da56e803e",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e6b7a06246b867a9",
        "type": "ui_tab",
        "name": "Profile",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b04556f58b734d6e",
        "type": "ui_tab",
        "name": "Settings",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8acf4cd8dcadb6ca",
        "type": "ui_tab",
        "name": "Device",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7b0bd463e3250132",
        "type": "ui_tab",
        "name": "FoodSchedule",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    }
]
